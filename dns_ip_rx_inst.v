// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 22.1 (Build Build 915 10/25/2022)
// Created on Tue Apr  4 21:03:10 2023

dns_ip_rx dns_ip_rx_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.rst(rst_sig) ,	// input  rst_sig
	.s_udp_hdr_valid(s_udp_hdr_valid_sig) ,	// input  s_udp_hdr_valid_sig
	.s_udp_hdr_ready(s_udp_hdr_ready_sig) ,	// output  s_udp_hdr_ready_sig
	.s_udp_source_port(s_udp_source_port_sig) ,	// input [15:0] s_udp_source_port_sig
	.s_udp_dest_port(s_udp_dest_port_sig) ,	// input [15:0] s_udp_dest_port_sig
	.s_udp_source_ip(s_udp_source_ip_sig) ,	// input [31:0] s_udp_source_ip_sig
	.s_udp_dest_ip(s_udp_dest_ip_sig) ,	// input [31:0] s_udp_dest_ip_sig
	.s_udp_length(s_udp_length_sig) ,	// input [15:0] s_udp_length_sig
	.s_udp_payload_axis_tdata(s_udp_payload_axis_tdata_sig) ,	// input [7:0] s_udp_payload_axis_tdata_sig
	.s_udp_payload_axis_tvalid(s_udp_payload_axis_tvalid_sig) ,	// input  s_udp_payload_axis_tvalid_sig
	.s_udp_payload_axis_tready(s_udp_payload_axis_tready_sig) ,	// output  s_udp_payload_axis_tready_sig
	.s_udp_payload_axis_tlast(s_udp_payload_axis_tlast_sig) ,	// input  s_udp_payload_axis_tlast_sig
	.s_udp_payload_axis_tuser(s_udp_payload_axis_tuser_sig) ,	// input  s_udp_payload_axis_tuser_sig
	.m_dns_valid(m_dns_valid_sig) ,	// output  m_dns_valid_sig
	.m_dns_ready(m_dns_ready_sig) ,	// input  m_dns_ready_sig
	.m_udp_src_ip(m_udp_src_ip_sig) ,	// output [31:0] m_udp_src_ip_sig
	.m_udp_dst_ip(m_udp_dst_ip_sig) ,	// output [31:0] m_udp_dst_ip_sig
	.m_udp_length(m_udp_length_sig) ,	// output [15:0] m_udp_length_sig
	.m_dns_pkt(m_dns_pkt_sig) 	// output [4095:0] m_dns_pkt_sig
);

